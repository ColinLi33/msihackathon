<!DOCTYPE html>
<html>
    <head>
        <link href="style.css" rel="stylesheet" type="text/css">
        <link rel="shortcut icon" href="ucsdlogo.jpg" />

    </head>
<div class="body">
<div class="Garage">Garage</div>
<div id="pcTooltip" class="tooltip"></div>
<div id="Seats">
    <div class="Row">
        <div class="Left">
            <div class="PC available pc-item" data-pc-name="D1">D1</div>
            <div class="PC available pc-item" data-pc-name="D2">D2</div>
            <div class="PC available pc-item" data-pc-name="D3">D3</div>
            <div class="PC available pc-item" data-pc-name="D4">D4</div>
            <div class="PC available pc-item" data-pc-name="D5">D5</div>
            <div class="PC available pc-item" data-pc-name="D6">D6</div>
        </div>
        <div class="right">
            <div class="PC available pc-item" data-pc-name="E1">E1</div>
        </div>
    </div>
    <div class="Row">
        <div class="Left">
            <div class="PC available pc-item" data-pc-name="C1">C1</div>
            <div class="PC available pc-item" data-pc-name="C2">C2</div>
            <div class="PC available pc-item" data-pc-name="C3">C3</div>
            <div class="PC available pc-item" data-pc-name="C4">C4</div>
            <div class="PC available pc-item" data-pc-name="C5">C5</div>
            <div class="PC available pc-item" data-pc-name="C6">C6</div>
        </div>
        <div class="right">
            <div class="PC available pc-item" data-pc-name="E2">E2</div>
        </div>
    </div>
    <div class="Row">
        <div class="Left">
            <div class="PC available pc-item" data-pc-name="B1">B1</div>
            <div class="PC available pc-item" data-pc-name="B2">B2</div>
            <div class="PC available pc-item" data-pc-name="B3">B3</div>
            <div class="PC available pc-item" data-pc-name="B4">B4</div>
            <div class="PC available pc-item" data-pc-name="B5">B5</div>
        </div>
        <div class="right">
            <div class="PC available pc-item" data-pc-name="E3">E3</div>
        </div>
    </div>
    <div class="Row">
        <div class="Left">
            <div class="PC available pc-item" data-pc-name="A1">A1</div>
            <div class="PC available pc-item" data-pc-name="A2">A2</div>
            <div class="PC available pc-item" data-pc-name="A3">A3</div>
            <div class="PC available pc-item" data-pc-name="A4">A4</div>
            <div class="PC available pc-item" data-pc-name="A5">A5</div>
        </div>
        <div class="right">
            <div class="PC available pc-item" data-pc-name="E4">E4</div>
        </div>
    </div>
    <div class="box">
        <!-- <label>People in Queue</label> -->
        <select id="QueueMembers">
            <option selected disabled>People in Queue</option>
        </select>
        <!-- <button class="disable">Assign PC</button> -->
        <button class="removeFromQueue">Remove</button>
    </div>
    <div class="box">
        <!-- <label>Current Sessions</label> -->
        <select id="sessions">
            <option selected disabled>Current Sessions</option>
        </select>
        <!-- <button class="disable">Assign PC</button> -->
    </div>
    <div class="box">
        <!-- <label>Disable/Enable PCs</label> -->
        <select name="ModifyPC" id="ModifyPC">
            <option hidden>Enable/Disable PC</option>
            <option value="A1">A1</option>
            <option value="A2">A2</option>
            <option value="A3">A3</option>
            <option value="A4">A4</option>
            <option value="A5">A5</option>
            <option value="A6">A6</option>
            <option value="B1">B1</option>
            <option value="B2">B2</option>
            <option value="B3">B3</option>
            <option value="B4">B4</option>
            <option value="B5">B5</option>
            <option value="C1">C1</option>
            <option value="C2">C2</option>
            <option value="C3">C3</option>
            <option value="C4">C4</option>
            <option value="C5">C5</option>
            <option value="C6">C6</option>
            <option value="D1">D1</option>
            <option value="D2">D2</option>
            <option value="D3">D3</option>
            <option value="D4">D4</option>
            <option value="D5">D5</option>
            <option value="D6">D6</option>
            <option value="E1">E1</option>
            <option value="E2">E2</option>
            <option value="E3">E3</option>
            <option value="E4">E4</option>
        </select>
        <button class="disable">Disable</button>
        <button class="enable">Enable</button>
      </div>    
</div>
<div class="Cafe">Cafe</div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.1.3/socket.io.js"></script>
<script>
    function sortByProperty(property){  
        return function(a, b){  
            if(parseInt(a[property]) > parseInt(b[property]))  
                return -1;  
            else if(parseInt(a[property]) < parseInt(b[property]))  
                return 1;  
        
            return 0;  
        }  
    }
    const socket = io();
    socket.on('pcStatusUpdate', (data) => {
        for(let i = 0; i < data.pcList.length; i++){
            changeStatus(data.pcList[i].name, data.pcList[i].status)
        }
    });
    const disable = document.getElementsByClassName("disable")[0];
    const enable = document.getElementsByClassName("enable")[0];
    disable.addEventListener("click", ()=>{
        let element = document.getElementById('ModifyPC');
        const pcName = document.getElementById("ModifyPC").value;
        socket.emit('disable', {pcName});
        element.value = 'Enable/Disable PC'
        element.value.innerHTML = 'hidden'
    });
    enable.addEventListener("click", ()=>{
        let element = document.getElementById('ModifyPC');
        const pcName = document.getElementById("ModifyPC").value;
        socket.emit('enable', {pcName});
        element.value = 'Enable/Disable PC'
        element.value.innerHTML = 'hidden'
    });

    const removeFromQueue = document.getElementsByClassName("removeFromQueue")[0];
    removeFromQueue.addEventListener("click", ()=>{
        let element = document.getElementById('QueueMembers');
        const user = document.getElementById("QueueMembers").value;
        socket.emit('removeFromQueue', {user})
        element.value = 'People in Queue'
    });

    socket.on('queueFillPC', (data) =>{
        data = data.queueInfo
        pcFilled = false;
        counter = 0;
        while(!pcFilled && counter < data.length){
            nextInLine = data[counter];
            let text = `A PC is available for: ${nextInLine.name}, please let them know. Click cancel if they are not here.`;
            if (confirm(text) == true) {
                pcFilled = true;
                socket.emit('queueAccepted', {nextInLine})
            } else {
                counter++;
                socket.emit('queueDeclined', {nextInLine})
            }
        }
    });

    socket.on('queueUpdated', (data) =>{
        const queueMembersDropdown = document.getElementById('QueueMembers');
        queueMembersDropdown.innerHTML = ''
        data = data.queueList;
        const option = document.createElement('option');
        option.text = "People in Queue"
        queueMembersDropdown.appendChild(option);
        for (let i = 0; i < data.length; i++) {
            const option = document.createElement('option');
            option.text = `${data[i].name}: ${((Date.now() - data[i].currSession) / 60000).toFixed(0)} minutes`
            option.value = data[i].pid
            queueMembersDropdown.appendChild(option);
        }
    });
    let currentSessionsDropdown = document.getElementById('sessions');
    currentSessionsDropdown.addEventListener("click", ()=>{
        socket.emit("getCurrSession", {});
    })
    socket.on('currentSessions', (data) =>{
        currentSessionsDropdown.innerHTML = '';
        data = data.result;
        const option = document.createElement('option');
        option.text = "Current Sessions"
        currentSessionsDropdown.appendChild(option);
        data.sort(sortByProperty("time"));
        console.log(data);
        for (let i = 0; i < data.length; i++) {
            const option = document.createElement('option');
            option.text = `PC: ${data[i].pcName}, ${data[i].userData.name}: ${data[i].time} minutes`
            currentSessionsDropdown.appendChild(option);
        }
    });

    const pcItems = document.querySelectorAll('.pc-item');
    pcItems.forEach((pcItem) => {
        pcItem.addEventListener('mouseenter', () => {
            const pcName = pcItem.dataset.pcName;
            socket.emit('getPcInfo', { pcName });
            showTooltip(pcItem);
        });
        pcItem.addEventListener('mouseleave', () => {
            hideTooltip();
        });
    });
    const pcTooltip = document.getElementById('pcTooltip');
    socket.on('pcInfo', (data) => {
        updateTooltip(data);
    });

    function showTooltip(pcItem) {
        pcTooltip.style.display = 'block';
        pcTooltip.style.left = pcItem.offsetLeft + 'px';
        pcTooltip.style.top = pcItem.offsetTop + pcItem.offsetHeight + 'px';
    }

    function hideTooltip() {
        pcTooltip.style.display = 'none';
     }

    function updateTooltip(data) {
        data = data[0]
        userData = "None"
        sessionLength = 0
        if(data.currUser != null){
            userData = data.currUser.name
            sessionLength = ((Date.now() - data.currUser.currSession) / 3600000).toFixed(2)
        }
        pcTooltip.innerHTML = `PC: ${data.name}<br>Status: ${data.status}<br>Current User: ${userData}<br>Session Length: ${sessionLength} hours`;
    } 

    pcItems.forEach((pcItem) => {
        pcItem.addEventListener('click', () => {
        if (pcItem.classList.contains("Used")){
            const pcName = pcItem.dataset.pcName;
            socket.emit('signOff', { pcName });
        }
        });
    });

    
  </script>
<script type="text/javascript" src="script.js"> </script>
</html>